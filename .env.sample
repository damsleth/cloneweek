# CLONEWEEK variables

# azure ad app settings
client_id=""
client_secret=""
tenant_id=""

# callback settings
# make sure host:port/path is added as a redirect uri in your azure ad app
# and that the port is open and accessible on your machine
callback_host="http://localhost"
callback_port=3000
callback_path="callback"

# oauth settings, these are the defaults for azure ad
oauth_host="https://login.microsoftonline.com"
oauth_path="oauth2/v2.0/authorize"
oauth_token_path="oauth2/v2.0/token"
scope="https://graph.microsoft.com/Calendars.ReadWrite"

# debug settings
dryrun=0 # only fetch events, don't create new ones
debug=0 # print debug messages
verbose=0 # print verbose messages, i.e. 'set -x', aka. silly loglevel
prefix_log=0 # prefix log messages with ["INFO", "DEBUG", "ERROR"]
log_events=1 # log calendar events to stdout
log_ignored_events=1 # log ignored and unmatched events to stdout

# calendar cloning settings
ignore_categories="IGNORE" # categories to ignore
default_categories="" # categories to clone - if empty, all categories not in ignore_categories will be cloned
auto_close_browser=1 # close browser after the auth flow - i.e. get the PID and kill it
graph_token_exp=0 # token expiry datetime. If the token is expired or auth_token is empty, the app will open a browser to authenticate
graph_token="" # JWT token to use for ms graph access, if not provided, the app will open a browser to authenticate
